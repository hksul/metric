# -*- coding: utf-8 -*-
"""Metric Studio Replication part 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yl8GOxB1heICQo_Lx8lQuEeF0YQWOvg6
"""

#!pip install -U finance-datareader

import streamlit as st
import matplotlib.pyplot as plt
import pandas as pd
import datetime
import FinanceDataReader as fdr

sDate = datetime.date(2000, 1, 1)
today = datetime.datetime.now()
eDate = datetime.date(today.year, today.month, today.day)
print(eDate)
eDate = datetime.date(2012,12,31)
print(eDate)
#print(sDate.year)

#kq11_df = fdr.DataReader('KQ11', sDate.year)
ks11_df = fdr.DataReader('KS11', sDate.year)

#kq11_df.head()
#ks11_df.head()
#ks11_df.tail()

eDate = datetime.date(2021,12,31)
dType = 'KOSDAQ'
dType = 'KOSPI'
if dType == 'KOSPI':
  df = ks11_df
else:
  df = kq11_df

df_result = pd.DataFrame()

for dateDiff in (1, 5, 10, 15, 30, 60, 125):
  numLoss = 0
  numWin = 0
  numStalemate = 0
  for (index, row), ii in zip(df.iterrows(), range(len(df.index))):
    if index.date() <= eDate and index.date() >= sDate:
      if row['Close'] > df.iloc[ii-dateDiff]['Close']:
        numWin +=1
      elif row['Close'] < df.iloc[ii-dateDiff]['Close']:
        numLoss +=1
      else:
        numStalemate +=1
  numTot = numWin+numLoss+numStalemate
  #print(dateDiff, numWin/numTot, numLoss/numTot, numStalemate/numTot)
  new_row = {'days':dateDiff, 'win %':numWin/numTot*100}
  df_result = df_result.append(new_row, ignore_index=True)




fig1, ax = plt.subplots()

x = [int(a) for a in list(df_result['days'])]
xi = list(range(len(x)))
y = list(df_result['win %'])
ax.plot(xi, y, color='b')
ax.set_xlabel('Timeframe - days')
ax.set_ylabel('Probability (%)') 
ax.set_title('Positive Return Probability for Korean Stocks - %s; %s - %s' % (dType, sDate.strftime('%m/%d/%Y'), eDate.strftime('%m/%d/%Y')))
ax.set_xticks(ticks=xi)
ax.set_xticklabels(x)
#fig1.savefig('1.png')
st.pyplot(fig1)


country = st.sidebar.text_input('Country')

col1, col2, col3 = st.columns([1,1,1])

with col1:
    r1 = st.button('Update The Database')
with col2:
    r2 = st.button('2')
with col3:
    r3 = st.button('3')

if r1:
  st.write("Update Database running")
